generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Rol {
  id       Int       @id @default(autoincrement())
  nombre   String    @unique
  usuarios Usuario[]

  @@map("rol")
}

model Usuario {
  id             Int            @id @default(autoincrement())
  nombre         String
  correo         String         @unique
  telefono       String?
  rolId          Int            @map("rol_id")
  citasRecibidas CitaPersonal[] @relation("ClienteCitas")
  citasDadas     CitaPersonal[] @relation("InstructorCitas")
  inscripciones  Inscripcion[]  @relation("ClienteInscripciones")
  clases         Sesion[]       @relation("InstructorClases")
  rol            Rol            @relation(fields: [rolId], references: [id])

  @@map("usuario")
}

model Clase {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  sesiones    Sesion[]

  @@map("clase")
}

model Sala {
  id        Int      @id @default(autoincrement())
  nombre    String
  ubicacion String?
  sesiones  Sesion[]

  @@map("sala")
}

model Sesion {
  id            Int           @id @default(autoincrement())
  claseId       Int           @map("clase_id")
  instructorId  Int           @map("instructor_id")
  salaId        Int?          @map("sala_id")
  fecha         DateTime
  horaInicio    DateTime      @map("hora_inicio")
  horaFin       DateTime      @map("hora_fin")
  cupoMaximo    valorCupo    @map("cupo_maximo")
  inscripciones Inscripcion[]
  clase         Clase         @relation(fields: [claseId], references: [id])
  instructor    Usuario       @relation("InstructorClases", fields: [instructorId], references: [id])
  sala          Sala?         @relation(fields: [salaId], references: [id])

  @@map("sesion")
}

enum valorCupo {
  10
  20
  30
  40
}
